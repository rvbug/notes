"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6256],{6218:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>t,toc:()=>h});var t=i(4668),s=i(4848),a=i(8453);const o={slug:"Neovim",title:"Neovim IDE",authors:["rakesh"],tags:["IDE","Neovim"]},r="Introduction",l={authorsImageUrls:[void 0]},h=[{value:"Vi Improved (Vim)",id:"vi-improved-vim",level:2},{value:"Neovim (Nvim)",id:"neovim-nvim",level:2},{value:"File structure",id:"file-structure",level:2},{value:"Init file",id:"init-file",level:2},{value:"Keymaps",id:"keymaps",level:2},{value:"Theme",id:"theme",level:2},{value:"Telescope",id:"telescope",level:2},{value:"<em><strong>Here&#39;s the completion and snippets for Python, Lua and Ocaml</strong></em>",id:"heres-the-completion-and-snippets-for-python-lua-and-ocaml",level:4},{value:"Quarto Support",id:"quarto-support",level:2},{value:"Git Integration",id:"git-integration",level:2},{value:"Lazygit",id:"lazygit",level:4},{value:"Gitblame",id:"gitblame",level:4},{value:"DAP (Debug Adapter Protocol)",id:"dap-debug-adapter-protocol",level:2},{value:"LazyVim",id:"lazyvim",level:3},{value:"NVChad",id:"nvchad",level:3},{value:"LunarVim",id:"lunarvim",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",img:"img",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"An Integrated Development Environment (IDE) provides a comprehensive list of features like code editor, compiler/interpreter, code completion, debugger and much more."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:"Modern editors work out of the box. Just install, launch and you are ready to go! But sometimes, it is slow and clunky eating up a lot of memory."}),"\n",(0,s.jsxs)(n.p,{children:["Then there are terminal based IDEs focusing on pure text manipulation. No fancy interfaces, only powered by keyboard shortcuts and macros. One such IDE is Vim (",(0,s.jsx)(n.strong,{children:"Vi"})," i",(0,s.jsx)(n.strong,{children:"M"}),"proved)"]}),"\n",(0,s.jsxs)(n.p,{children:["In this blog, I have shared my Neovim setup, plugins and keyboard mappings. This configuration supports various programming languages like ",(0,s.jsx)(n.code,{children:"Lua"}),", ",(0,s.jsx)(n.code,{children:"Python for Data Science & ML"}),", ",(0,s.jsx)(n.code,{children:"OCaml"}),", ",(0,s.jsx)(n.code,{children:"Rust"}),", ",(0,s.jsx)(n.code,{children:"Web Development"}),", even Notes and Journaling. Detailed documentation is available on my ",(0,s.jsx)(n.a,{href:"https://github.com/rvbug/neovim",children:"github"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Read on!"}),"\n",(0,s.jsx)(n.h1,{id:"popular-ides",children:"Popular IDEs"}),"\n",(0,s.jsxs)(n.p,{children:["Here's a 2023 stack overflow survey of the most popular IDEs. Vim is still in the top 5 considering that it was first released in 1991. (",(0,s.jsx)(n.a,{href:"https://survey.stackoverflow.co/2023/#most-popular-technologies-new-collab-tools",children:"Link"})," to the survey)"]}),"\n",(0,s.jsxs)(n.p,{children:["![Stackoverflow Survey]",(0,s.jsx)(n.img,{alt:"alt text",src:i(1840).A+"",width:"1690",height:"1720"})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"vi-improved-vim",children:"Vi Improved (Vim)"}),"\n",(0,s.jsx)(n.p,{children:"Vim was created by Bram Moolenaar. A highly customizable modal, screen-based text editor written in C and Vim Script (VimL). It is known to be very fast, extremely efficient, highly configurable, supporting many programming languages and providing extensive plugin support."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"VIM",src:i(1212).A+"",width:"3368",height:"1894"})}),"\n",(0,s.jsx)(n.h2,{id:"neovim-nvim",children:"Neovim (Nvim)"}),"\n",(0,s.jsxs)(n.p,{children:["NeoVim was released in 2014 and is a fork of Vim. It uses a fast, small and lightweight scripting language called ",(0,s.jsx)(n.a,{href:"https://www.lua.org/",children:"Lua"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Lua supports procedural, object-oriented and functional programming. It can be embedded into C/C++ quite easily too."}),"\n",(0,s.jsx)(n.p,{children:"The goal of this project was not to replace Vim but to extend and incorporate additional features. Almost all of the features of vim are now supported by Neovim."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Note"}),": I have used Neovim and nvim interchangeably to refer to Neovim."]}),"\n",(0,s.jsxs)(n.p,{children:["(This splash screen is because of a plugin called ",(0,s.jsx)(n.a,{href:"https://github.com/goolord/alpha-nvim",children:"Alpha"}),")"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Neovim",src:i(1108).A+"",width:"2682",height:"1690"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h1,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["The main configuration directory of nvim is ",(0,s.jsx)(n.code,{children:"$XDG_CONFIG_HOME/nvim/"})," pointing to this folder - ",(0,s.jsx)(n.code,{children:"~/.config/nvim/"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Note"}),": Lua is integrated as the first-class language for Neovim v5.1 and above."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# nvim looks for this file when it loads\n~/.config/nvim/init.lua \n\n# if this folder and files does not exist, create them\n> mkdir .config\n> cd .config\n> mkdir nvim \n> cd nvim \n> touch init.lua\n"})}),"\n",(0,s.jsx)(n.h2,{id:"file-structure",children:"File structure"}),"\n",(0,s.jsxs)(n.p,{children:["I have used ",(0,s.jsx)(n.a,{href:"https://github.com/junegunn/vim-plug",children:"VimPlug"})," and ",(0,s.jsx)(n.a,{href:"https://github.com/wbthomason/packer.nvim",children:"Packer"})," but I found ",(0,s.jsx)(n.a,{href:"https://github.com/folke/lazy.nvim",children:"Lazy"})," package manager to be well organized for my needs."]}),"\n",(0,s.jsxs)(n.p,{children:["Here's how my files are structured. Anything inside of plugins folder gets called automatically. Details of these files are available on my ",(0,s.jsx)(n.a,{href:"https://github.com/rvbug/neovim?tab=readme-ov-file#folder-structure",children:"github"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"~/.config/nvim/\n\u251c\u2500\u2500 LICENSE  \n\u251c\u2500\u2500 README.md  \n\u251c\u2500\u2500 init.lua  \n\u251c\u2500\u2500 lazy-lock.json\n\u251c\u2500\u2500 lua\n\u2502\xa0\xa0 \u251c\u2500\u2500 keymaps.lua\n\u2502\xa0\xa0 \u2514\u2500\u2500 plugins\n\u2502\xa0\xa0     \u251c\u2500\u2500 autopairs.lua\n\u2502\xa0\xa0     \u251c\u2500\u2500 comments.lua\n\u2502\xa0\xa0     \u251c\u2500\u2500 completions.lua\n\u2502\xa0\xa0     \u251c\u2500\u2500 db.lua\n\u2502\xa0\xa0     \u251c\u2500\u2500 debug.lua\n\u2502\xa0\xa0     \u251c\u2500\u2500 floating-help.lua\n\u2502\xa0\xa0     \u251c\u2500\u2500 gitblame.lua\n\u2502\xa0\xa0     \u251c\u2500\u2500 gitsigns.lua\n\u2502\xa0\xa0     \u251c\u2500\u2500 greetings.lua\n\u2502\xa0\xa0     \u251c\u2500\u2500 iron.lua\n\u2502\xa0\xa0     \u251c\u2500\u2500 lspconfig.lua\n\u2502\xa0\xa0     \u251c\u2500\u2500 lualine.lua\n\u2502\xa0\xa0     \u251c\u2500\u2500 markdown.lua\n\u2502\xa0\xa0     \u251c\u2500\u2500 neorg.lua\n\u2502\xa0\xa0     \u251c\u2500\u2500 noice.lua\n\u2502\xa0\xa0     \u251c\u2500\u2500 none-ls.lua\n\u2502\xa0\xa0     \u251c\u2500\u2500 nvim_tree.lua\n\u2502\xa0\xa0     \u251c\u2500\u2500 quarto.lua\n\u2502\xa0\xa0     \u251c\u2500\u2500 telescope.lua\n\u2502\xa0\xa0     \u251c\u2500\u2500 themes.lua\n\u2502\xa0\xa0     \u251c\u2500\u2500 toggleterm.lua\n\u2502\xa0\xa0     \u251c\u2500\u2500 treesitter.lua\n\u2502\xa0\xa0     \u2514\u2500\u2500 zen.lua\n\u2514\u2500\u2500 yarn.lock\n"})}),"\n",(0,s.jsx)(n.h1,{id:"terminal--tmux",children:"Terminal & Tmux"}),"\n",(0,s.jsxs)(n.p,{children:["I use ",(0,s.jsx)(n.a,{href:"https://wezfurlong.org/wezterm/index.html",children:"Wezterm"})," terminal. It is written in rust and supports lua based configuration. ",(0,s.jsx)(n.a,{href:"https://github.com/rvbug/neovim/blob/main/.wezterm.lua",children:(0,s.jsx)(n.code,{children:".wezterm.lua"})})," contains my basic setup."]}),"\n",(0,s.jsx)(n.p,{children:"Using Tmux (Terminal Multiplexer) helps me with multiple sessions, each with multiple windows (tabs). It even allows one to save and restore the sessions."}),"\n",(0,s.jsxs)(n.p,{children:["You can find the configuration in this ",(0,s.jsx)(n.a,{href:"https://github.com/rvbug/neovim/blob/main/.tmux.conf",children:(0,s.jsx)(n.code,{children:".tmux.conf"})})," file."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"TMUX",src:i(9884).A+"",width:"3236",height:"1990"})}),"\n",(0,s.jsx)(n.h2,{id:"init-file",children:"Init file"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"init.lua"})," is the first file that gets loaded when Neovim starts. I am loading ",(0,s.jsx)(n.code,{children:"keymaps.lua"})," and Lazy package manager via this."]}),"\n",(0,s.jsx)(n.h2,{id:"keymaps",children:"Keymaps"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"keymaps.lua"})," is where I have configured my keyboard shortcuts. Look at a few sample keybindings, these are pretty standard ones."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# global leader key is <Space> \nvim.g.mapleader = " "\n\n# in normal mode, use <space>v or <space>sh to run specific commands \n\n# to split the screen vertically\nkeymap.set("n", "<leader>sv" , "<C-w>v")\n# splits screen horizontally\nkeymap.set("n", "<leader>sh" , "<C-w>s")\n\n## Telescope keymapings\n\n# find files \nkeymap.set("n", "<leader>ff", "<cmd>Telescope find_files<cr>") \n# live grep \nkeymap.set("n", "<leader>fg", "<cmd>Telescope live_grep<cr>") \n# find string under cursor \nkeymap.set("n", "<leader>fc", "<cmd>Telescope grep_string<cr>") \n# display list of open buffers\nkeymap.set("n", "<leader>fb", "<cmd>Telescope buffers<cr>")\n'})}),"\n",(0,s.jsx)(n.h2,{id:"theme",children:"Theme"}),"\n",(0,s.jsxs)(n.p,{children:["There are many color schemes to choose from, I have been using ",(0,s.jsx)(n.a,{href:"https://github.com/tiagovla/tokyodark.nvim",children:"Tokyo Dark"})," and the configuration is loaded via ",(0,s.jsx)(n.code,{children:"themes.lua"})," file."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Theme",src:i(1551).A+"",width:"1346",height:"1018"})}),"\n",(0,s.jsx)(n.h2,{id:"telescope",children:"Telescope"}),"\n",(0,s.jsx)(n.p,{children:"A fuzzy finder plugin that helps you to find files and supports live grep along with many other features."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"telescope",src:i(6168).A+"",width:"2940",height:"1872"})}),"\n",(0,s.jsx)(n.h1,{id:"code-completion",children:"Code Completion"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"completions.lua"})," has the following plugins to support code completions and snippets using LSP (",(0,s.jsx)(n.a,{href:"https://microsoft.github.io/language-server-protocol/",children:"Language Server Protocol"}),")."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# client for LSP.\n"hrsh7th/cmp-nvim-lsp", \n# snippet engine\n"L3MON4D3/LuaSnip",\n# completion source for nvim-cmp\n"saadparwaiz1/cmp_luasnip",\n# additional snippet support \n"rafamadriz/friendly-snippets",\n'})}),"\n",(0,s.jsx)(n.h4,{id:"heres-the-completion-and-snippets-for-python-lua-and-ocaml",children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"Here's the completion and snippets for Python, Lua and Ocaml"})})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.img,{alt:"Python",src:i(1756).A+"",width:"1782",height:"1758"}),"\n",(0,s.jsx)(n.img,{alt:"Lua",src:i(8484).A+"",width:"1028",height:"762"}),"\n",(0,s.jsx)(n.img,{alt:"OCaml",src:i(2381).A+"",width:"1164",height:"674"})]}),"\n",(0,s.jsx)(n.p,{children:"The following plugins help with path and command completion too."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# path completion\n"hrsh7th/cmp-path",\n# command line completion\n"hrsh7th/cmp-cmdline",\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Path Completion"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"PathCompletion",src:i(9527).A+"",width:"1426",height:"1024"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Command Completion"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Command",src:i(8523).A+"",width:"1754",height:"1246"})}),"\n",(0,s.jsx)(n.h2,{id:"quarto-support",children:"Quarto Support"}),"\n",(0,s.jsx)(n.p,{children:"Quarto is heavily used in scientific publishing, my setup supports them."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Quarto",src:i(8185).A+"",width:"3104",height:"1784"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Did you know:"})," Quarto also has great integration with Jupyter Notebook, see the sample below."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"The one on the left is the Quarto html format generated from the Jupyter notebook on your right."})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"QuartoJupyter",src:i(1011).A+"",width:"3302",height:"1906"})}),"\n",(0,s.jsx)(n.h2,{id:"git-integration",children:"Git Integration"}),"\n",(0,s.jsx)(n.p,{children:"For git integration I use"}),"\n",(0,s.jsx)(n.h4,{id:"lazygit",children:"Lazygit"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Lazu",src:i(8918).A+"",width:"3150",height:"1698"})}),"\n",(0,s.jsx)(n.h4,{id:"gitblame",children:"Gitblame"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"GitBlame",src:i(83).A+"",width:"968",height:"616"})}),"\n",(0,s.jsx)(n.h2,{id:"dap-debug-adapter-protocol",children:"DAP (Debug Adapter Protocol)"}),"\n",(0,s.jsx)(n.p,{children:"Showing DAP support for Python"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"DAP",src:i(3711).A+"",width:"3400",height:"2004"})}),"\n",(0,s.jsx)(n.h1,{id:"next-steps",children:"Next steps"}),"\n",(0,s.jsxs)(n.p,{children:["How do you learn Neovim, I have added the references to some amazing documentation ",(0,s.jsx)(n.a,{href:"https://github.com/rvbug/neovim?tab=readme-ov-file#references",children:"here"}),". You can also get extensive help right inside Neovim."]}),"\n",(0,s.jsxs)(n.p,{children:["Checkout ",(0,s.jsx)(n.code,{children:":Tutor"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Tutor",src:i(5520).A+"",width:"2158",height:"1716"})}),"\n",(0,s.jsxs)(n.p,{children:["Type ",(0,s.jsx)(n.code,{children:":help"})," to show up entire documentation but you can also go to specific ones by typing ",(0,s.jsx)(n.code,{children:":help usr_0"})," or use ",(0,s.jsx)(n.a,{href:"https://neovim.io/doc/user/index.html",children:"Neovim Website"})," to read through it."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"TutorHelp",src:i(5601).A+"",width:"3410",height:"2006"})}),"\n",(0,s.jsx)(n.h1,{id:"alternatives",children:"Alternatives"}),"\n",(0,s.jsx)(n.p,{children:'If you decide to try Neovim but do not want to go through the hassle of configuring all by yourself then check out these interesting "starter kit" projects.'}),"\n",(0,s.jsxs)(n.p,{children:["All these projects have extensive documentation on their website but before you try them, backup your existing nvim file under ",(0,s.jsx)(n.code,{children:"~/.config/"})," folder if it exists."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"> cd ~/.config\n> mv nvim nvim_backup\n"})}),"\n",(0,s.jsx)(n.h3,{id:"lazyvim",children:(0,s.jsx)(n.a,{href:"https://www.lazyvim.org/",children:"LazyVim"})}),"\n",(0,s.jsx)(n.p,{children:"Supports Mac/Linux based systems."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/LazyVim/starter ~/.config/nvim\n"})}),"\n",(0,s.jsx)(n.h3,{id:"nvchad",children:(0,s.jsx)(n.a,{href:"https://nvchad.com/",children:"NVChad"})}),"\n",(0,s.jsx)(n.p,{children:"To install on Mac/Linux based system, use the following command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/NvChad/NvChad ~/.config/nvim --depth 1 && nvim\n"})}),"\n",(0,s.jsx)(n.h3,{id:"lunarvim",children:(0,s.jsx)(n.a,{href:"https://www.lunarvim.org/",children:"LunarVim"})}),"\n",(0,s.jsx)(n.p,{children:"To install, use the following command"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"LV_BRANCH='release-1.3/neovim-0.9' bash <(curl -s https://raw.githubusercontent.com/LunarVim/LunarVim/release-1.3/neovim-0.9/utils/installer/install.sh)\n"})}),"\n",(0,s.jsx)(n.h1,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsx)(n.p,{children:"Yes, it takes time to configure these IDEs but is it really worth the effort? That is the question you need to answer for yourself. If you are unable to decide then I would suggest give it a try."}),"\n",(0,s.jsx)(n.p,{children:"Neovim has helped me to design the workflow that I need to get to a complete 'mouse-less' environment."}),"\n",(0,s.jsxs)(n.p,{children:["Check out my ",(0,s.jsx)(n.a,{href:"https://github.com/rvbug/neovim",children:"configuration"})," and leave a comment if you have had any similar experiences. Reach out if you have any questions, I'd be happy to help!"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"Happy Coding!!"})})}),"\n",(0,s.jsx)(n.h1,{id:"references",children:"References"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/rvbug/neovim/",children:"My Configuration (Github)"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://quarto.org/docs/publishing/rstudio-connect.html",children:"Official VI"}),(0,s.jsx)(n.a,{href:"https://quarto.org/docs/publishing/confluence.html",children:"M"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Vim_(text_editor)",children:"VIM"}),(0,s.jsx)(n.a,{href:"https://pandoc.org/",children:"Wiki"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://quarto.org/docs/publishing/confluence.html",children:"Officia"}),(0,s.jsx)(n.a,{href:"https://neovim.io/",children:"l Neovim"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://linuxhandbook.com/vim-cheat-sheet/",children:"Vim Cheat Sheet"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://devhints.io/lua",children:"Lua Cheat Sheet"})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},83:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/Gitblame-1ee42c7a54863fc6fb347f9f4be8a1d7.png"},8918:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/Lazygit-ca4dbce327f07cc324ade2b58977ad0f.png"},8185:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/Quarto1-8bc157d5f930eb4325809ded54d01ea0.png"},1011:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/QuartoJupyter-aa5ff07244b016e1177ccd057b906510.png"},1840:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/Survey-7a2f831a2346ce5455c7d8b0a6b30062.png"},1212:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/Vim-0944a21e1d7a30cae0dedef96b66058a.png"},8523:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/command-21db599ae0b0c481488e6ee25b1d540d.png"},1756:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/completion-8c814f1d4d72886efc80d510c7261392.png"},8484:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/completion2-0924dd5578e180ea5c701eb428322a13.png"},2381:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/completion3-301fe27c2499805ac917128b3f84c19b.png"},3711:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/dap-896a7a613fcd0a6e7c5abc6eefa24288.png"},1108:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/neovim-8710f1707c05370cd7e6ad312ef1c4c5.png"},9527:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/path-56b1ec524e12119aba4437b3301c361e.png"},6168:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/telescope-b2d00725a992f98bff59401bb64f7375.png"},1551:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/theme-1410246679a6b7ffd7e7e7b30ba9880a.png"},9884:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/tmux-8120cb8d37dadb5eb6d3a213b50a1d2d.png"},5520:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/tutor-8057493ab7b70f6b5d53b6ff1b55ed77.png"},5601:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/tutorhelp-b88e7aca6f20f724b367fc1870c40de1.png"},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var t=i(6540);const s={},a=t.createContext(s);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(a.Provider,{value:n},e.children)}},4668:e=>{e.exports=JSON.parse('{"permalink":"/notes/blog/Neovim","source":"@site/blog/2024-04-21/Neovimide.md","title":"Neovim IDE","description":"An Integrated Development Environment (IDE) provides a comprehensive list of features like code editor, compiler/interpreter, code completion, debugger and much more.","date":"2024-04-21T00:00:00.000Z","tags":[{"inline":false,"label":"IDE","permalink":"/notes/blog/tags/IDE","description":"Integrated Development Environment"},{"inline":false,"label":"Neovim","permalink":"/notes/blog/tags/Neovim","description":"Neovim"}],"readingTime":5.815,"hasTruncateMarker":true,"authors":[{"name":"rakesh","title":"Sr. Engineering Manager","url":"https://qubitai.in","page":{"permalink":"/notes/blog/authors/rakesh"},"socials":{"w":"https://qubitai.in","github":"https://github.com/rvbug"},"imageURL":"https://avatars.githubusercontent.com/u/10928536?v=4","key":"rakesh"}],"frontMatter":{"slug":"Neovim","title":"Neovim IDE","authors":["rakesh"],"tags":["IDE","Neovim"]},"unlisted":false,"prevItem":{"title":"Dotfiles","permalink":"/notes/blog/dotfiles"},"nextItem":{"title":"Quantum Machine Learning","permalink":"/notes/blog/QuantumML"}}')}}]);