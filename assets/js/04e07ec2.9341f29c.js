"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8959],{3502:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var r=t(8623),i=t(4848),a=t(8453);const o={slug:"Cookiever1",title:"Cookie Cutter Version 1.0",authors:["rakesh"],tags:["ML"]},s="Introduction",c={authorsImageUrls:[void 0]},l=[{value:"YAML",id:"yaml",level:2},{value:"Argparse",id:"argparse",level:2},{value:"File and Directories",id:"file-and-directories",level:2},{value:"Virtual env",id:"virtual-env",level:2},{value:"Help",id:"help",level:2},{value:"Final step",id:"final-step",level:2}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",hr:"hr",img:"img",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"I go by one simple principle"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"If you repeat the same steps twice, then automate it the third time."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"Couple of years back, I wrote blog on how to :"}),"\n",(0,i.jsxs)(n.p,{children:["1> Structure your Data Science and ML project - ",(0,i.jsx)(n.a,{href:"https://rvbug.hashnode.dev/structuring-data-science-and-ml-projects",children:"Link here"})]}),"\n",(0,i.jsxs)(n.p,{children:["2> Automating ML structure using ",(0,i.jsx)(n.code,{children:"Make"})," and a simple ",(0,i.jsx)(n.code,{children:"Python Script"})," - ",(0,i.jsx)(n.a,{href:"https://rvbug.hashnode.dev/ml-cookie-cutter",children:"Link here"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["In this follow-up article, I will provide an update to the cookie-cutter project which now uses ",(0,i.jsx)(n.code,{children:"yaml"})," making it far more flexible and easy to use."]}),"\n",(0,i.jsx)(n.h1,{id:"project-structure",children:"Project Structure"}),"\n",(0,i.jsx)(n.p,{children:"Here's the structure I use for all my ML projects."}),"\n",(0,i.jsx)(n.p,{children:"You can create a different one but these are pretty standard for most of the projects."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"folder",src:t(3705).A+"",width:"1632",height:"1328"})}),"\n",(0,i.jsx)(n.h2,{id:"yaml",children:"YAML"}),"\n",(0,i.jsxs)(n.p,{children:["YAML is ",(0,i.jsx)(n.strong,{children:"a text based data serialization language for managing your configuration files"}),". YAML stands for ",(0,i.jsx)(n.code,{children:"Yet Another Markup Language"})," or ",(0,i.jsx)(n.code,{children:"YAML ain't markup language"}),". You can read more about it ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/YAML",children:"here"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Here's the YAML format used in my project."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  # support for data version control\n  - .dvc:\n\n  # if you plan to use docker container\n  - docker:\n    - Dockerfile\n\n  # basic ML development files\n  - src:\n    - __init__.py\n    - data_pipeline.py\n    - data_processing.py\n\n  ####\n"})}),"\n",(0,i.jsx)(n.h1,{id:"script",children:"Script"}),"\n",(0,i.jsxs)(n.p,{children:["One of the main pre-requisites for this script is ",(0,i.jsx)(n.code,{children:"pyyaml"}),". You can find the documentation ",(0,i.jsx)(n.a,{href:"https://pyyaml.org/wiki/PyYAMLDocumentation",children:"here"}),". Install them via ",(0,i.jsx)(n.a,{href:"https://pip.pypa.io/en/stable/",children:"pip"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"argparse",children:"Argparse"}),"\n",(0,i.jsx)(n.p,{children:"Everything starts with the main function. It uses argparse to parse command line arguments provided to the script. It then loads the yaml config file."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# parse the arguments provided on the command line\nargs = parse_args()\n\n# Load yaml config\nconfig = load_config()\n"})}),"\n",(0,i.jsx)(n.p,{children:"The parser will look for specific flags and take action. More about that in the Help section below."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'parser.add_argument("--n", "--name", #...)\nparser.add_argument("--p", "--path",  #...) \nparser.add_argument("--c", "--config",  #...)\nparser.add_argument("--v", "--venv",  #...)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"file-and-directories",children:"File and Directories"}),"\n",(0,i.jsxs)(n.p,{children:["Based on how YAML is structured, the script will create files, directories and sub-directories via a function ",(0,i.jsx)(n.code,{children:"create_directories"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def create_directories(project_path, config):\n\nif isinstance(config, str):\n        item_path = os.path.join(project_path, config)\n        with open(item_path, "w"):\n            pass  # empty file\n\n#...\n'})}),"\n",(0,i.jsx)(n.h2,{id:"virtual-env",children:"Virtual env"}),"\n",(0,i.jsxs)(n.p,{children:["If you provide flag to create a ",(0,i.jsx)(n.a,{href:"https://docs.python.org/3/library/venv.html",children:"virtual environment"}),", the script will create one for you. There is a function called ",(0,i.jsx)(n.code,{children:"create_virtual_env"})," to do exactly that."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def create_virtual_env(project_path, activate=True):\n#...\nif not os.path.exists(venv_path):\n        venv.create(venv_path, with_pip=True)\n#...\n"})}),"\n",(0,i.jsx)(n.h2,{id:"help",children:"Help"}),"\n",(0,i.jsxs)(n.p,{children:["When you use ",(0,i.jsx)(n.code,{children:"-h"})," flag, it will show you how to use the script."]}),"\n",(0,i.jsxs)(n.p,{children:["If you want to give a specific name to your project use ",(0,i.jsx)(n.code,{children:"--n or N"})," flag. If not, it will create a default directory called ",(0,i.jsx)(n.code,{children:"ml-cookie-cutter."})]}),"\n",(0,i.jsxs)(n.p,{children:["Specify the path where the project needs to be created using ",(0,i.jsx)(n.code,{children:"--p or P"})," flag."]}),"\n",(0,i.jsxs)(n.p,{children:["Finally, if you want the script to create a virtual environment for you, go ahead and use the ",(0,i.jsx)(n.code,{children:"--v or --venv"})," flag. By default, the name of the environment is ",(0,i.jsx)(n.code,{children:"venv"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"\n$> python3 main.py --h\n\n# usage: ML Cookie Cutter [-h] [--n N] [--p P] [--c C] [--v]\n\n# Creates ML project cookie cutter structure\n\n#optional arguments:\n#  -h, --help       show this help message and exit\n#  --n N, --name N  Name of the directory to be created, default = ml-cookie-cutter\n#  --p P, --path P    provide the path where, default is $HOME dir\n#  --v, --venv        create a virtual env. [ignore if you are already on a virtual env]\n\n# Enjoy and happy coding\n"})}),"\n",(0,i.jsx)(n.h2,{id:"final-step",children:"Final step"}),"\n",(0,i.jsx)(n.p,{children:"Once you have the virtual environment set up, you can activate it as shown below. You should see that it in your command prompt; go ahead and start installing all your Data science and ML libraries."}),"\n",(0,i.jsxs)(n.p,{children:["For deactivating simply type ",(0,i.jsx)(n.code,{children:"deactivate"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# go to the project folder\n$> cd ml-cookie-cutter\n# activate the environment \n$> source venv/bin/activate \n\n# venv is activated \n(venv) $> pip install numpy pandas pytorch seaborn notebook\n\n# To deactive use the following command\n(venv) $> deactivate\n$>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["On windows if you use PowerShell activate using ",(0,i.jsx)(n.code,{children:"Activate.ps1"})]}),"\n",(0,i.jsx)(n.h1,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsx)(n.p,{children:"This article shows how you can use this cookie-cutter project and create a ML structure with a simple command-line tool. Enjoy and have fun learning!"}),"\n",(0,i.jsx)(n.p,{children:"This is how I have used the cookie-cutter project to create a ML structure with a simple command-line tool. Enjoy and have fun learning!"}),"\n",(0,i.jsx)(n.p,{children:"Happy coding!"}),"\n",(0,i.jsx)(n.h1,{id:"references",children:"References"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/rvbug/cookie-ml/",children:"Github - Complete Code"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://pypi.org/project/PyYAML/",children:"Pyyaml Documentation"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.python.org/",children:"Installing Python"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://pip.pypa.io/en/stable/",children:"PIP Installation"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://rvbug.hashnode.dev/ml-cookie-cutter",children:"How to structure your ML projects"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://rvbug.hashnode.dev/structuring-data-science-and-ml-projects",children:"Automating ML structure (v 1.0)"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://docs.python.org/3/library/venv.html",children:"Documentation on Virtual Env"})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},3705:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/folder-c126a8012bc8f9ab2897f78cd38a9a71.png"},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var r=t(6540);const i={},a=r.createContext(i);function o(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:n},e.children)}},8623:e=>{e.exports=JSON.parse('{"permalink":"/notes/blog/Cookiever1","source":"@site/blog/2022-09-10/cookiev10.md","title":"Cookie Cutter Version 1.0","description":"I go by one simple principle","date":"2022-09-10T00:00:00.000Z","tags":[{"inline":true,"label":"ML","permalink":"/notes/blog/tags/ml"}],"readingTime":3.64,"hasTruncateMarker":true,"authors":[{"name":"rakesh","title":"Sr. Engineering Manager","url":"https://qubitai.in","page":{"permalink":"/notes/blog/authors/rakesh"},"socials":{"w":"https://qubitai.in","github":"https://github.com/rvbug"},"imageURL":"https://avatars.githubusercontent.com/u/10928536?v=4","key":"rakesh"}],"frontMatter":{"slug":"Cookiever1","title":"Cookie Cutter Version 1.0","authors":["rakesh"],"tags":["ML"]},"unlisted":false,"prevItem":{"title":"Recommendation System","permalink":"/notes/blog/Recsys"},"nextItem":{"title":"Data Science and ML Structure","permalink":"/notes/blog/dsml"}}')}}]);